<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mapojob.admin.dao.UserMapper">

    <sql id="selectFromUser">
        SELECT
            USER_ID userId
             ,  USER_PWD userPwd
             ,  USER_NAME userName
             ,  GENDER userGender
             ,  EMAIL userEmail
             ,  PHONE userPhone
             ,  AUTH_CD userAuthCode
             ,  AUTH.CODE_NM userAuthName
             ,  TEAM_CD userTeamCode
             ,  TEAM.CODE_NM userTeamName
             ,  POS_CD userPosCode
             ,  POS.CODE_NM userPosName
             ,  U.INSERT_ID insertId
             ,  U.INSERT_DT insertDate
             ,  U.UPDATE_ID updateId
             ,  U.UPDATE_DT updateDate
        FROM
            USER U
                LEFT OUTER JOIN COMMON_DETAIL_CD AUTH
                                ON U.AUTH_CD = AUTH.CODE AND AUTH.COMMON_CD = 'AUTH'
                LEFT OUTER JOIN COMMON_DETAIL_CD TEAM
                                ON U.TEAM_CD = TEAM.CODE AND TEAM.COMMON_CD = 'TEAM'
                LEFT OUTER JOIN COMMON_DETAIL_CD POS
                                ON U.POS_CD = POS.CODE AND POS.COMMON_CD = 'POS'
    </sql>

    <sql id="searchCondition">
        <choose>
            <when test='option=="N"'>
                AND USER_NAME LIKE concat('%', #{keyword}, '%')  # %USER_NAME%
            </when>
            <when test='option=="E"'>
                AND EMAIL LIKE concat('%', #{keyword}, '%')  # %EMAIL%
            </when>
            <otherwise>
                AND (USER_ID LIKE concat('%', #{keyword}, '%')
                OR EMAIL LIKE concat('%', #{keyword}, '%'))
            </otherwise>
        </choose>
    </sql>

    <select id="selectUser" parameterType="String" resultType="UserDto">
        <include refid="selectFromUser"/>
        WHERE U.USER_ID = #{uid}
    </select>

    <select id="selectUserAll" resultType="UserDto">
        <include refid="selectFromUser"/>
    </select>

    <select id="searchResultCnt" parameterType="SearchCondition" resultType="int">
        SELECT count(*)
        FROM USER
        WHERE TRUE
        <include refid="searchCondition"/>
    </select>

    <select id="searchSelectPage" parameterType="SearchCondition" resultType="UserDto">
        <include refid="selectFromUser"/>
        WHERE TRUE
        <include refid="searchCondition"/>
        ORDER BY U.INSERT_DT DESC
        LIMIT #{offset}, #{pageSize}
    </select>

    <delete id="deleteUser" parameterType="String">
        DELETE FROM USER
        WHERE USER_ID = ${userId}
    </delete>

    <insert id="insertUser" parameterType="UserDto">
        INSERT INTO USER
            (USER_ID, USER_PWD, USER_NAME
            , GENDER, EMAIL, PHONE, AUTH_CD, TEAM_CD, POS_CD
            , INSERT_ID, INSERT_DT, UPDATE_ID, UPDATE_DT)
        VALUES
            (#{userId}, '1234', #{userName}
            , #{userGender}, #{userEmail}, #{userPhone}
            , #{userAuthCode}, #{userTeamCode}, #{userPosCode}
            , #{insertId}
            , date_format(NOW(), '%Y-%m-%d %H:%i')
            , #{updateId}
            , date_format(NOW(), '%Y-%m-%d %H:%i')
            )
    </insert>

    <update id="modifyUser" parameterType="UserDto">
        UPDATE USER
        SET
          USER_NAME = #{userName}
          , GENDER = #{userGender}
          , EMAIL = #{userEmail}
          , PHONE = #{userPhone}
          , AUTH_CD = #{userAuthCode}
          , TEAM_CD = #{userTeamCode}
          , POS_CD = #{userPosCode}
          , UPDATE_ID = #{updateId}
          , UPDATE_DT = date_format(NOW(), '%Y-%m-%d %H:%i')
        WHERE USER_ID = #{userId}
    </update>

    <select id="genderCount" parameterType="String" resultType="int">
        SELECT count(*)
        FROM USER
        WHERE GENDER = #{userGender}
    </select>

</mapper>
